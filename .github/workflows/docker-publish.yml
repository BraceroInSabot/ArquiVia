name: CI/CD - Build, Push, and Deploy

on:
  push:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            bracer2003/arquivia-app:latest
            bracer2003/arquivia-app:${{ github.sha }}

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Debug Secrets Availability
        run: |
          echo "Verificando a existÃªncia dos segredos..."
          if [ -z "${{ secrets.SSH_HOST }}" ]; then echo "ERRO: O segredo SSH_HOST estÃ¡ VAZIO."; else echo "OK: SSH_HOST estÃ¡ configurado."; fi
          if [ -z "${{ secrets.SSH_USER }}" ]; then echo "ERRO: O segredo SSH_USER estÃ¡ VAZIO."; else echo "OK: SSH_USER estÃ¡ configurado."; fi
          if [ -z "${{ secrets.SSH_PORT }}" ]; then echo "ERRO: O segredo SSH_PORT estÃ¡ VAZIO."; else echo "OK: SSH_PORT estÃ¡ configurado."; fi
          if [ -z "${{ secrets.SSH_KEY }}" ]; then echo "ERRO: O segredo SSH_KEY estÃ¡ VAZIO."; else echo "OK: SSH_KEY estÃ¡ configurado."; fi

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "âœ… Conectado ao servidor!"
            echo "ðŸš€ Reiniciando o deployment no Kubernetes..."
            microk8s kubectl set image deployment/arquivia-app-deployment arquivia-app-container=bracer2003/arquivia-app:${{ github.sha }}
            echo "ðŸŽ‰ Comando de rollout enviado com sucesso!"
